<% layout("/layouts/boilerplate.ejs"); %>

    <script defer src="http://localhost:3001/socket.io/socket.io.js"></script>

    <link rel="stylesheet" href="/css/forum/chat.css">

    <div id="mart-parent">
        <div id="mart-container">
            <div id="mart">
                <div id="mart-forum-name">
                    <h5>Forums</h5>
                </div>
                <div id="chat-listing">
                    <% allForums.forEach(function(forum) { %>
                        <div class="chat" data-forum-id="<%= forum._id %>">
                            <img src="<%= forum.icon.url %>" alt="forum-icon">
                            <div class="card-body">
                                <h6 class="card-title">
                                    <%= forum.name %>
                                </h6>
                                <!-- Additional details if needed -->
                            </div>
                        </div>
                        <% }); %>
                </div>
            </div>
        </div>

        <div id="mart-chat-container">
            <div id="mart-chat">
                <div id="chat-forum-name">
                    <h5>
                        <%= forum.name %>
                    </h5>
                    <a href="/forums/<%= forum._id %>/mart">
                        Marketplace <i class="fa-solid fa-shop"></i>
                    </a>


                </div>


                <!-- <div class="under-dev">
                <p>Chats are under development but meanwhile you can explore the Marketplace.</p>
            </div> -->

                <div id="chat-area">
                        <div class="message left">Aakarsh: Hi</div>
                        <div class="message right">Saksham: Hello</div>
                </div>


            </div>
            <div id="chat-input">
                <form id="inputform">
                    <input type="text" class="form-control" id="messageInput">
                    <button type="submit" id="send-btn">Send</button>
                </form>
            </div>
        </div>
    </div>

    <script>
       document.addEventListener('DOMContentLoaded', function() {
    const chatDivs = document.querySelectorAll('.chat');
    const form = document.getElementById('inputform');
    const chatArea = document.getElementById('chat-area');
    const messageInput = document.getElementById('messageInput');
    const socket = io("http://localhost:3001");
    const forumId = '<%= forum._id %>'; // Add the forum ID from the current context

    // Join the current forum room
    socket.emit('joinRoom', forumId);

    // Function to append a new message to the chat area
    function appendMessage(senderName, message, position) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', position);
        messageDiv.innerHTML = `<strong>${senderName}:</strong> ${message}`;
        chatArea.appendChild(messageDiv);
        chatArea.scrollTop = chatArea.scrollHeight; // Scroll to the bottom
    }

    // Event listener for chat divs
    chatDivs.forEach(div => {
        div.addEventListener('click', function() {
            const forumId = this.getAttribute('data-forum-id');
            window.location.href = `/forums/${forumId}`; // Redirect to the forum URL
        });
    });

    // Event listener for form submission (sending a new message)
    form.addEventListener('submit', function(event) {
        event.preventDefault();
        const message = messageInput.value.trim();
        if (message) {
            appendMessage('You', message, 'right');
            socket.emit('sendMessageToRoom', {
                forumId: forumId,
                message: message,
                sender: '<%= currentUser._id %>',
                senderName: 'You'
            });
            messageInput.value = ''; // Clear the input field
        }
    });

    // Event listener for receiving new messages from the server
    socket.on('newMessage', function(data) {
        const position = data.senderName === 'You' ? 'right' : 'left';
        appendMessage(data.senderName, data.message, position);
    });
});

    </script>
    